rm(list=ls())
library(XML)
setwd("c:/Users/djl/Documents/summer project")
library(rio)
library(data.table)
library(stringr)
library(xlsx)
library(matrixStats)
library(ggplot2)
dataclean<-import("data_clean2.xlsx")
dataclean<-dataclean[-which(is.na(dataclean$treatment1)),]
dataclean<-dataclean[-which(grepl('NA',dataclean$treatment2)),]
dataclean<-dataclean[-which(grepl('NA',dataclean$treatment3)),]
dataclean<-dataclean[-which(grepl('NA',dataclean$treatment4)),]


summary(as.factor(dataclean$lowattention))
820/4722

#BOOTDATA is our data but as done immediately above, you need to remove the NA's from our
#treatment columns. 
#INGROUPS are the treatment groups you want to look at, 1st 4 rows in the returned data
#are mean and confidence intervals for these groups. Next 4 rows in returned data are
#mean/CI for all other groups that are not excluded. Last 4 returned rows are the mean/CIs
#for the difference between in groups and the other, not excluded groups.
#EXCLUDEDGROUPS are entered the same way as ingroups and are those that will be removed 
#from the ingroup/outgroup comparison. for example if we want to compare experts versus
#non experts then we would want to exclude group 9, the control group
#LISTCONDITIONS are variables and the variable values that we want to look. It requres list type data
#where the names of the various list(s) are the variables(columns) in our data and the values
#within the lists are the values want to select on. 
#so pass in list(column name = "responses you want included", second column name = "responses 
#for that variable that we are interested in", ect.) <-you can add more than one
#value in a column by separating with '|'
#BOOTNUM is the number of bootstrap samples to draw for creating confidence intervals

condinterval<-function(bootdata,ingroups,excludedgroups="zzz",listconditions=NA,bootnum){

    outcome<-rbind(rep(NA,12),rep(NA,12))
  bootdata<-bootdata[-which(grepl(paste0(paste0(excludedgroups,sep = "|",collapse = ""),"zzz",collapse = ""),bootdata$group)),]
  for(i in 1:bootnum){
  temp<-bootdata[sample(1:nrow(bootdata),nrow(bootdata),replace = TRUE),]
  if(!is.na(listconditions)){
    for(j in length(listconditions)){
      k<-which(colnames(temp)== names(listconditions)[j])
      temp<-temp[grep(listconditions[j],as.character(temp[,k])),]
    }
  }
  ingrouptemp<-temp[which(grepl(paste0(paste0(ingroups,sep = "|",collapse = ""),"zzz",collapse = ""),temp$group)),22:25]
  outgrouptemp<-temp[-which(grepl(paste0(paste0(ingroups,sep = "|",collapse = ""),"zzz",collapse = ""),temp$group)),22:25]
  outcome<-rbind(outcome,c(colMeans(data.matrix(ingrouptemp)),colMeans(data.matrix(outgrouptemp)),colMeans(data.matrix(ingrouptemp))-colMeans(data.matrix(outgrouptemp))))
  }

returnvalues<-as.data.frame(cbind(colMeans(na.omit(outcome)),colQuantiles(na.omit(outcome),probs = c(.025,.975))))
names(returnvalues)[1]<-"means"
return(returnvalues)

}



####same thing as condinterval but compares across independent variable groups
####listdiff and listcompare should be two seperate numeric lists labeled as the name of 
####the variable of interest. Have not tested with character varaibles (not sure if 
####the %in% function with recognize characters). 




bygroups<-function(bootdata,ingroups,excludedgroups="zzz",listdiff,listcompare,listconditions=NA,bootnum){
  
  outcome<-rbind(rep(NA,12),rep(NA,12))
  bootdata<-bootdata[-which(grepl(paste0(paste0(excludedgroups,sep = "|",collapse = ""),"zzz",collapse = ""),bootdata$group)),]
    for(i in 1:bootnum){
    temp<-bootdata[sample(1:nrow(bootdata),nrow(bootdata),replace = TRUE),]
    if(!is.na(listconditions)){
      for(j in length(listconditions)){
        k<-which(colnames(temp)== names(listconditions)[j])
        temp<-temp[grep(listconditions[j],as.character(temp[,k])),]
      }
    }
    m<-which(colnames(temp)==names(listdiff))
    category1<-subset.data.frame(temp,temp[,m] %in% unlist(listdiff))
    category2<-subset.data.frame(temp,temp[,m] %in% unlist(listcompare))
    ingtemp1<-category1[which(grepl(paste0(paste0(ingroups,sep = "|",collapse = ""),"zzz",collapse = ""),category1$group)),22:25]
    outgtemp1<-category1[-which(grepl(paste0(paste0(ingroups,sep = "|",collapse = ""),"zzz",collapse = ""),category1$group)),22:25]
    ingtemp2<-category2[which(grepl(paste0(paste0(ingroups,sep = "|",collapse = ""),"zzz",collapse = ""),category2$group)),22:25]
    outgtemp2<-category2[-which(grepl(paste0(paste0(ingroups,sep = "|",collapse = ""),"zzz",collapse = ""),category2$group)),22:25]
    
    cat1treat<-(colMeans(data.matrix(ingtemp1))-colMeans(data.matrix(outgtemp1)))
    cat2treat<-(colMeans(data.matrix(ingtemp2))-colMeans(data.matrix(outgtemp2)))
    treatdiff<-cat1treat-cat2treat
    
    outcome<-rbind(outcome,c(cat1treat,cat2treat,treatdiff))
  }
  
  returnvalues<-as.data.frame(cbind(colMeans(na.omit(outcome)),colQuantiles(na.omit(outcome),probs = c(.025,.975))))
  names(returnvalues)[1]<-"means"
  return(returnvalues)
  
}



###########Main Plot#######################################
#Expert v non
mp1<-condinterval(dataclean,c(1,2,3,4),excludedgroups = c(9),bootnum = 1000)
#Gain v Loss
mp2<-condinterval(dataclean,c(1,3,5,7),c(9),bootnum = 1000)
#Fact V Experience
mp3<-condinterval(dataclean,c(1,2,5,6),c(9),bootnum = 1000)


mainplot<-cbind(ref = as.factor(c(1,1,1,1,2,2,2,2,3,3,3,3)),Treatment = as.factor(c(1,2,3,4,1,2,3,4,1,2,3,4)),rbind(mp1[9:12,],mp2[9:12,],mp3[9:12,]))
names(mainplot)[c(4,5)]<-c('low','hi')

ggplot(mainplot, aes(x = ref,y=means,ymin=low,ymax=hi,shape = Treatment,color=Treatment))+
  geom_errorbar(position = 'dodge2',size = 1)+geom_point(position = position_dodge(width = .9),size = 3)+
  scale_x_discrete(labels=c('1'='Expert v Non-Expert','2'='Gain v Loss','3'='Fact v Experience'))+
  labs(title = "Figure 2: Main Treatment Effects with Confidence Intervals",
       y = 'Difference in Means',x = NULL,
       caption = "Confidence intervals derived from nonparametric bootstrapping with 95% confidence.")+
  theme_test()+geom_hline(yintercept=c(0), linetype="dotted")+
  scale_color_manual(values = c("#0072B2", "#D55E00","#52854C","#C4961A"),labels = c('Vignette 1','Vignette 2','Vignette 3','Vignette 4'))+
  scale_shape_manual(values = c(0,2,7,8),labels = c('Vignette 1','Vignette 2','Vignette 3','Vignette 4'))+
  theme(axis.text.x = element_text(face = 'bold'),plot.caption = element_text(face = "italic",size = 6.5))
  ggsave('mainplot.jpeg')


  
  
########################################################################################
############ROBUSTNESs CHECK LOW ATTENTION#############################################
  
  ######################################################################################
  #############low attention removed
  #Expert v non
  mp1<-condinterval(dataclean,c(1,2,3,4),excludedgroups = c(9),bootnum = 1000,listconditions = list(lowattention = '0'))
  
  #Gain v Loss
  mp2<-condinterval(dataclean,c(1,3,5,7),c(9),bootnum = 1000,listconditions = list(lowattention = '0'))
  #Fact V Experience
  mp3<-condinterval(dataclean,c(1,2,5,6),c(9),bootnum = 1000,listconditions = list(lowattention = '0'))
  
  #########################low attention kept
  ########manipulation 4
  #Expert v non
  mp1a<-condinterval(dataclean[dataclean$netmanipcheck>3,],c(1,2,3,4),c(9),bootnum = 1000)
  
  #Gain v Loss
  mp2a<-condinterval(dataclean[dataclean$netmanipcheck>3,],c(1,3,5,7),c(9),bootnum = 1000)
  #Fact V Experience
  mp3a<-condinterval(dataclean[dataclean$netmanipcheck>3,],c(1,2,5,6),c(9),bootnum = 1000)
  
##############manipulation 3  
  mp1b<-condinterval(dataclean[dataclean$netmanipcheck>2,],c(1,2,3,4),c(9),bootnum = 1000)
  
  #Gain v Loss
  mp2b<-condinterval(dataclean[dataclean$netmanipcheck>2,],c(1,3,5,7),c(9),bootnum = 1000)
  #Fact V Experience
  mp3b<-condinterval(dataclean[dataclean$netmanipcheck>2,],c(1,2,5,6),c(9),bootnum = 1000)
  
  #############manipulation 2
  mp1c<-condinterval(dataclean[dataclean$netmanipcheck>1,],c(1,2,3,4),c(9),bootnum = 1000)
  
  #Gain v Loss
  mp2c<-condinterval(dataclean[dataclean$netmanipcheck>1,],c(1,3,5,7),c(9),bootnum = 1000)
  #Fact V Experience
  mp3c<-condinterval(dataclean[dataclean$netmanipcheck>1,],c(1,2,5,6),c(9),bootnum = 1000)
  #################manipulation 1
  
  mp1d<-condinterval(dataclean[dataclean$netmanipcheck>0,],c(1,2,3,4),c(9),bootnum = 1000)
  
  #Gain v Loss
  mp2d<-condinterval(dataclean[dataclean$netmanipcheck>0,],c(1,3,5,7),c(9),bootnum = 1000)
  #Fact V Experience
  mp3d<-condinterval(dataclean[dataclean$netmanipcheck>0,],c(1,2,5,6),c(9),bootnum = 1000)
  
  
 #################interact with low attention############################################ 
  ########manipulation 4
  #Expert v non
  mp1e<-condinterval(dataclean[dataclean$netmanipcheck>3,],c(1,2,3,4),c(9),bootnum = 1000,listconditions = list(lowattention = '0'))
  
  #Gain v Loss
  mp2e<-condinterval(dataclean[dataclean$netmanipcheck>3,],c(1,3,5,7),c(9),bootnum = 1000,listconditions = list(lowattention = '0'))
  #Fact V Experience
  mp3e<-condinterval(dataclean[dataclean$netmanipcheck>3,],c(1,2,5,6),c(9),bootnum = 1000,listconditions = list(lowattention = '0'))
  
  ##############manipulation 3  
  mp1f<-condinterval(dataclean[dataclean$netmanipcheck>2,],c(1,2,3,4),c(9),bootnum = 1000,listconditions = list(lowattention = '0'))
  
  #Gain v Loss
  mp2f<-condinterval(dataclean[dataclean$netmanipcheck>2,],c(1,3,5,7),c(9),bootnum = 1000,listconditions = list(lowattention = '0'))
  #Fact V Experience
  mp3f<-condinterval(dataclean[dataclean$netmanipcheck>2,],c(1,2,5,6),c(9),bootnum = 1000,listconditions = list(lowattention = '0'))
  
  #############manipulation 2
  mp1g<-condinterval(dataclean[dataclean$netmanipcheck>1,],c(1,2,3,4),c(9),bootnum = 1000,listconditions = list(lowattention = '0'))
  
  #Gain v Loss
  mp2g<-condinterval(dataclean[dataclean$netmanipcheck>1,],c(1,3,5,7),c(9),bootnum = 1000,listconditions = list(lowattention = '0'))
  #Fact V Experience
  mp3g<-condinterval(dataclean[dataclean$netmanipcheck>1,],c(1,2,5,6),c(9),bootnum = 1000,listconditions = list(lowattention = '0'))
  #################manipulation 1
  
  mp1h<-condinterval(dataclean[dataclean$netmanipcheck>0,],c(1,2,3,4),c(9),bootnum = 1000,listconditions = list(lowattention = '0'))
  
  #Gain v Loss
  mp2h<-condinterval(dataclean[dataclean$netmanipcheck>0,],c(1,3,5,7),c(9),bootnum = 1000,listconditions = list(lowattention = '0'))
  #Fact V Experience
  mp3h<-condinterval(dataclean[dataclean$netmanipcheck>0,],c(1,2,5,6),c(9),bootnum = 1000,listconditions = list(lowattention = '0'))
  
  
  
  
  
  
  
  
  ###################graphs for manipulation checks with and without low attention removed
  
  
  mainplot<-cbind(ref = as.factor(c(1,1,1,1,2,2,2,2,3,3,3,3)),Treatment = as.factor(c(1,2,3,4,1,2,3,4,1,2,3,4)),
                  rbind(mp1e[9:12,],mp2e[9:12,],mp3e[9:12,],
                        mp1f[9:12,],mp2f[9:12,],mp3f[9:12,],
                        mp1g[9:12,],mp2g[9:12,],mp3g[9:12,],
                        mp1h[9:12,],mp2h[9:12,],mp3h[9:12,]),
                  c(rep(1,12),rep(2,12),rep(3,12),rep(4,12)))
  names(mainplot)[c(4,5,6)]<-c('low','hi','facet')
  
  mainplot$facet[mainplot$facet==1]<-"Zero Errors"
  mainplot$facet[mainplot$facet==2]<-"One or Less Errors"
  mainplot$facet[mainplot$facet==3]<-"Two or Less Errors"
  mainplot$facet[mainplot$facet==4]<-"Three or Less Errors"
  mainplot$facet<-factor(mainplot$facet,levels = c("Zero Errors",'One or Less Errors',
                                                   "Two or Less Errors","Three or Less Errors"))

  mainplotb<-cbind(ref = as.factor(c(1,1,1,1,2,2,2,2,3,3,3,3)),Treatment = as.factor(c(1,2,3,4,1,2,3,4,1,2,3,4)),
                   rbind(mp1[9:12,],mp2[9:12,],mp3[9:12,],
                         mp1a[9:12,],mp2a[9:12,],mp3a[9:12,],
                         mp1b[9:12,],mp2b[9:12,],mp3b[9:12,],
                         mp1c[9:12,],mp2c[9:12,],mp3c[9:12,],
                         mp1d[9:12,],mp2d[9:12,],mp3d[9:12,]),
                   c(rep(1,12),rep(2,12),rep(3,12),rep(4,12),rep(5,12)))
  names(mainplotb)[c(4,5,6)]<-c('low','hi','facet')
  
  mainplotb$facet[mainplotb$facet==1]<-'Check Ignored'
  mainplotb$facet[mainplotb$facet==2]<-"Zero Errors"
  mainplotb$facet[mainplotb$facet==3]<-"One or Less Errors"
  mainplotb$facet[mainplotb$facet==4]<-"Two or Less Errors"
  mainplotb$facet[mainplotb$facet==5]<-"Three or Less Errors"
  mainplotb$facet<-factor(mainplotb$facet,levels = c("Zero Errors",'One or Less Errors',
                                                   "Two or Less Errors","Three or Less Errors",
                                                   'Check Ignored'))
  
  
  
  
  
  ggplot(mainplot, aes(x = ref,y=means,ymin=low,ymax=hi,shape = Treatment,color=Treatment))+
    facet_wrap(~facet,nrow = 2)+
    geom_errorbar(position = 'dodge2',size = 1)+geom_point(position = position_dodge(width = .9),size = 3)+
    scale_x_discrete(labels=c('1'='Expert v Non','2'='Fact v Experience','3'='Gain v Loss','4'='Experience',
                              '5'='Gain','6'='Loss'))+
    labs(title = "Appendix Figure 3: Treatment Effects under Various Manipulation Check Thresholds",
         y = 'Difference in Means',x = NULL,
         caption = "Confidence intervals derived from nonparametric bootstrapping with 95% confidence.")+
    theme_test()+geom_hline(yintercept=c(0), linetype="dotted")+
    scale_color_manual(values = c("#0072B2", "#D55E00","#52854C","#C4961A"),labels = c('Vignette 1','Vignette 2','Vignette 3','Vignette 4'))+
    scale_shape_manual(values = c(0,2,7,8),labels = c('Vignette 1','Vignette 2','Vignette 3','Vignette 4'))+
    theme(axis.text.x = element_text(face = 'bold'),
          plot.caption = element_text(face = "italic",size = 6.5),
          plot.title = element_text(hjust = .5),
          strip.background = element_rect(colour="white", fill="white"),
          panel.spacing.x = unit(5.5, "mm"))+
    coord_flip()+
    geom_vline(xintercept = c(.5,1.5,2.5,3.5,4.5,5.5,6.5),linetype = 'dotted')+
    geom_hline(yintercept = 0,linetype = 'dashed')
  ggsave('manipulation.jpeg',width = 8,height = 8)
  
  
  
  
  ggplot(mainplotb, aes(x = ref,y=means,ymin=low,ymax=hi,shape = Treatment,color=Treatment))+
    facet_wrap(~facet,nrow = 2)+
    geom_errorbar(position = 'dodge2',size = 1)+geom_point(position = position_dodge(width = .9),size = 3)+
    scale_x_discrete(labels=c('1'='Expert v Non','2'='Fact v Experience','3'='Gain v Loss','4'='Experience',
                              '5'='Gain','6'='Loss'))+
    labs(title = "Appendix Figure 4: Treatment Effects Removing Low Attention 
and Various Manipulation Check Thresholds",
         y = 'Difference in Means',x = NULL,
         caption = "Confidence intervals derived from nonparametric bootstrapping with 95% confidence. Low attention indicates at least one invalid or mispelled open ended response.")+
    theme_test()+geom_hline(yintercept=c(0), linetype="dotted")+
    scale_color_manual(values = c("#0072B2", "#D55E00","#52854C","#C4961A"),labels = c('Vignette 1','Vignette 2','Vignette 3','Vignette 4'))+
    scale_shape_manual(values = c(0,2,7,8),labels = c('Vignette 1','Vignette 2','Vignette 3','Vignette 4'))+
    theme(axis.text.x = element_text(face = 'bold'),
          plot.caption = element_text(face = "italic",size = 6.5),
          plot.title = element_text(hjust = .5),
          strip.background = element_rect(colour="white", fill="white"),
          panel.spacing.x = unit(5.5, "mm"))+
    coord_flip()+
    geom_vline(xintercept = c(.5,1.5,2.5,3.5,4.5,5.5,6.5),linetype = 'dotted')+
    geom_hline(yintercept = 0,linetype = 'dashed')
  ggsave('lowattention.jpeg',width = 8,height = 8)  


####################################################
#########INTERACTIONS##############################

#row  
ref<-as.factor(c(3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,
                 1,1,1,1,2,2,2,2,5,5,5,5,6,6,6,6,
                 1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4))

#facet
facet<-c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
         2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
         3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3)
  


###expert fact versus non-expert fact, removed groups 3, 4, 7, 8 and 9 so it compares
#groups 1 and 2 to groups 5 and 6
expt1<-condinterval(dataclean,c(1,2),c(9,3,4,7,8),bootnum = 1000)[9:12,]
  ###expert opinion versus non-expert opinion, removes groups 1,2,5,6 and 9 so it compares
#groups 3 and 4 to 7 and 8
expt2<-condinterval(dataclean,c(3,4),c(1,2,5,6,9),bootnum = 1000)[9:12,]
  
####expert positive versus expert negative
expt3<-condinterval(dataclean,c(1,3),c(5,6,7,8,9),bootnum = 1000)[9:12,]
expt4<-condinterval(dataclean,c(2,4),c(5,6,7,8,9),bootnum = 1000)[9:12,]


####fact versus experience  expert, then nonexpert
fact1<-condinterval(dataclean,c(1,2),c(5,6,7,8,9),bootnum = 1000)[9:12,]
fact2<-condinterval(dataclean,c(5,6),c(1,2,3,4,9),bootnum = 1000)[9:12,]


####fact versus experience gain then loss
fact3<-condinterval(dataclean,c(1,5),c(3,4,7,8,9),bootnum = 1000)[9:12,]
fact4<-condinterval(dataclean,c(3,7),c(1,2,5,6,9),bootnum = 1000)[9:12,]



#### gain/loss,  expert then non   
gain1<-condinterval(dataclean,c(1,3),c(5,6,7,8,9),bootnum = 1000)[9:12,]
gain2<-condinterval(dataclean,c(5,7),c(1,2,3,4,9),bootnum = 1000)[9:12,]


###gain/loss, fact then experience 
gain3<-condinterval(dataclean,c(1,5),c(3,4,7,8,9),bootnum = 1000)[9:12,]
gain4<-condinterval(dataclean,c(3,7),c(1,2,5,6,9),bootnum = 1000)[9:12,]


interactplot<-cbind(rbind(expt1,expt2,expt3,expt4,fact1,fact2,fact3,fact4,gain1,gain2,gain3,gain4),ref,facet,Treatment = as.factor(c(1,2,3,4)))
interactplot$facet<-as.factor(ifelse(interactplot$facet==1,"Expert v Nonexpert",
                           ifelse(interactplot$facet==2,"Fact v Experience"
                                  ,"Gain v Loss")))  
names(interactplot)[c(2,3)]<-c('low','hi')

ggplot(interactplot, aes(x = ref,y=means,ymin=low,ymax=hi,shape = Treatment,color=Treatment))+
  facet_wrap(~facet,nrow = 1)+
  geom_errorbar(position = 'dodge2',size = 1)+geom_point(position = position_dodge(width = .9),size = 3)+
  scale_x_discrete(labels=c('1'='Expert','2'='Nonexpert','3'='Fact','4'='Experience',
                            '5'='Gain','6'='Loss'))+
  labs(title = "Appendix Figure 1: Treatment Interaction Effects",
       y = 'Difference in Means',x = NULL,
       caption = "Confidence intervals derived from nonparametric bootstrapping with 95% confidence.")+
  theme_test()+geom_hline(yintercept=c(0), linetype="dotted")+
  scale_color_manual(values = c("#0072B2", "#D55E00","#52854C","#C4961A"),labels = c('Vignette 1','Vignette 2','Vignette 3','Vignette 4'))+
  scale_shape_manual(values = c(0,2,7,8),labels = c('Vignette 1','Vignette 2','Vignette 3','Vignette 4'))+
  theme(axis.text.x = element_text(face = 'bold'),
        plot.caption = element_text(face = "italic",size = 6.5),
        plot.title = element_text(hjust = .5),
        strip.background = element_rect(colour="white", fill="white"),
        panel.spacing.x = unit(5.5, "mm"))+
  coord_flip()+
  geom_vline(xintercept = c(.5,1.5,2.5,3.5,4.5,5.5,6.5),linetype = 'dotted')+
  geom_hline(yintercept = 0,linetype = 'dashed')
ggsave('interact.jpeg', width = 7, height = 9)



#########################################################
########PID#############################################



pid1<-bygroups(dataclean,c(1,2,3,4),excludedgroups = 9,listdiff = list(pid=c(1,2,3)),listcompare = list(pid = c(6,7,8)),bootnum = 1000)

pid4<-bygroups(dataclean,c(1,3,5,7),excludedgroups = 9,listdiff = list(pid=c(1,2,3)),listcompare = list(pid = c(6,7,8)),bootnum = 1000)

pid7<-bygroups(dataclean,c(1,2,5,6),excludedgroups = 9,listdiff = list(pid=c(1,2,3)),listcompare = list(pid = c(6,7,8)),bootnum = 1000)

pidplot<-cbind(ref = as.factor(c(3,3,3,3,2,2,2,2,1,1,1,1)),
               Dependent = c(1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3),
               Treatment = as.factor(c(1,2,3,4)),rbind(pid1,pid4,pid7))
pidplot$Dependent<-as.factor(ifelse(pidplot$Dependent==1,'Expert v Non-Expert',
                          ifelse(pidplot$Dependent==2,'Gain v Loss','Fact v Experience')))
names(pidplot)[c(5,6)]<-c('low','hi')

ggplot(pidplot, aes(x = ref,y=means,ymin=low,ymax=hi,shape = Treatment,color=Treatment))+
  facet_wrap(~Dependent,nrow = 1)+
  geom_errorbar(position = 'dodge2',size = .8)+geom_point(position = position_dodge(width = .9),size = 2.2)+
  scale_x_discrete(labels=c('1'='Difference','2'='Republicans','3'='Democrats'))+
  labs(title = "Appendix Figure 2: Treatment Effects by Partisanship with 
Difference in Difference",
       y = 'Difference in Means/Difference in Difference',x = NULL,
       caption = "Confidence intervals derived from nonparametric bootstrapping with 95% confidence.")+
  theme_test()+geom_hline(yintercept=c(0), linetype="dotted")+
  scale_color_manual(values = c("#0072B2", "#D55E00","#52854C","#C4961A"),labels = c('Vignette 1','Vignette 2','Vignette 3','Vignette 4'))+
  scale_shape_manual(values = c(0,2,7,8),labels = c('Vignette 1','Vignette 2','Vignette 3','Vignette 4'))+
  theme(axis.text.x = element_text(face = 'bold'),
        plot.caption = element_text(face = "italic",size = 6.5),
        plot.title = element_text(hjust = .5),
        strip.background = element_rect(colour="white", fill="white"))+
  coord_flip()+
  geom_vline(xintercept = c(.5,1.5,2.5,3.5,4.5,5.5,6.5),linetype = 'dotted')+
  geom_hline(yintercept = 0,linetype = 'dashed')
ggsave('pid.jpeg')





